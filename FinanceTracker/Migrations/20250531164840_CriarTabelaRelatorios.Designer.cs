// <auto-generated />
using System;
using FinanceTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinanceTracker.Migrations
{
    [DbContext(typeof(FinanceTrackerContext))]
    [Migration("20250531164840_CriarTabelaRelatorios")]
    partial class CriarTabelaRelatorios
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinanceTracker.Data.AtivoFinanceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Duracao")
                        .HasColumnType("integer");

                    b.Property<float>("Imposto")
                        .HasColumnType("real");

                    b.Property<decimal>("LucroMensalMedioAntesImpostos")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LucroMensalMedioAposImpostos")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LucroTotalAntesImpostos")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LucroTotalAposImpostos")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("AtivosFinanceiros", "public");
                });

            modelBuilder.Entity("FinanceTracker.Data.DepositoPrazo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AtivoId")
                        .HasColumnType("integer");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeroConta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("TaxaJuroAnual")
                        .HasColumnType("real");

                    b.Property<string>("Titulares")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AtivoId")
                        .IsUnique();

                    b.ToTable("DepositosPrazo", "public");
                });

            modelBuilder.Entity("FinanceTracker.Data.FundoInvestimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AtivoId")
                        .HasColumnType("integer");

                    b.Property<float>("Montante")
                        .HasColumnType("real");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("TaxaJuro")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AtivoId")
                        .IsUnique();

                    b.ToTable("FundosInvestimento", "public");
                });

            modelBuilder.Entity("FinanceTracker.Data.ImovelArrendado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AtivoId")
                        .HasColumnType("integer");

                    b.Property<string>("Designacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("OutrasDespesas")
                        .HasColumnType("real");

                    b.Property<float>("ValorCondominio")
                        .HasColumnType("real");

                    b.Property<float>("ValorImovel")
                        .HasColumnType("real");

                    b.Property<float>("ValorRenda")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AtivoId")
                        .IsUnique();

                    b.ToTable("ImoveisArrendados", "public");
                });

            modelBuilder.Entity("FinanceTracker.Data.JurosMensaisFundo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<int>("FundoId")
                        .HasColumnType("integer");

                    b.Property<int>("Mes")
                        .HasColumnType("integer");

                    b.Property<float>("Taxa")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("FundoId");

                    b.ToTable("JurosMensaisFundos", "public");
                });

            modelBuilder.Entity("FinanceTracker.Data.PagamentoImpostos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AtivoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AtivoId");

                    b.ToTable("PagamentosImpostos", "public");
                });

            modelBuilder.Entity("FinanceTracker.Data.Relatorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Relatorios", "public");
                });

            modelBuilder.Entity("FinanceTracker.Models.Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoUtilizador")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Utilizadores", "public");
                });

            modelBuilder.Entity("FinanceTracker.Data.AtivoFinanceiro", b =>
                {
                    b.HasOne("FinanceTracker.Models.Utilizador", "Utilizador")
                        .WithMany("AtivosFinanceiros")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("FinanceTracker.Data.DepositoPrazo", b =>
                {
                    b.HasOne("FinanceTracker.Data.AtivoFinanceiro", "AtivoFinanceiro")
                        .WithOne("DepositoPrazo")
                        .HasForeignKey("FinanceTracker.Data.DepositoPrazo", "AtivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtivoFinanceiro");
                });

            modelBuilder.Entity("FinanceTracker.Data.FundoInvestimento", b =>
                {
                    b.HasOne("FinanceTracker.Data.AtivoFinanceiro", "AtivoFinanceiro")
                        .WithOne("FundoInvestimento")
                        .HasForeignKey("FinanceTracker.Data.FundoInvestimento", "AtivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtivoFinanceiro");
                });

            modelBuilder.Entity("FinanceTracker.Data.ImovelArrendado", b =>
                {
                    b.HasOne("FinanceTracker.Data.AtivoFinanceiro", "AtivoFinanceiro")
                        .WithOne("ImovelArrendado")
                        .HasForeignKey("FinanceTracker.Data.ImovelArrendado", "AtivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtivoFinanceiro");
                });

            modelBuilder.Entity("FinanceTracker.Data.JurosMensaisFundo", b =>
                {
                    b.HasOne("FinanceTracker.Data.FundoInvestimento", "FundoInvestimento")
                        .WithMany("JurosMensais")
                        .HasForeignKey("FundoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FundoInvestimento");
                });

            modelBuilder.Entity("FinanceTracker.Data.PagamentoImpostos", b =>
                {
                    b.HasOne("FinanceTracker.Data.AtivoFinanceiro", "AtivoFinanceiro")
                        .WithMany()
                        .HasForeignKey("AtivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtivoFinanceiro");
                });

            modelBuilder.Entity("FinanceTracker.Data.AtivoFinanceiro", b =>
                {
                    b.Navigation("DepositoPrazo")
                        .IsRequired();

                    b.Navigation("FundoInvestimento")
                        .IsRequired();

                    b.Navigation("ImovelArrendado")
                        .IsRequired();
                });

            modelBuilder.Entity("FinanceTracker.Data.FundoInvestimento", b =>
                {
                    b.Navigation("JurosMensais");
                });

            modelBuilder.Entity("FinanceTracker.Models.Utilizador", b =>
                {
                    b.Navigation("AtivosFinanceiros");
                });
#pragma warning restore 612, 618
        }
    }
}
